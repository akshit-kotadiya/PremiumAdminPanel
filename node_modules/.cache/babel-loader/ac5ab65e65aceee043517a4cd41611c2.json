{"ast":null,"code":"var _jsxFileName = \"/home/agilepc115/Desktop/Projects/ConnectPlus/lucid-responsive-reactjs-admin-template-2022-03-25-09-01-24-utc/PremiumAdminPanel/src/components/SwitchBordCard.js\";\nimport React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { onPressSwitchBordButton, onPressSwitchBordDropDown } from \"../actions\";\nimport { Dropdown } from \"react-bootstrap\";\nclass SwitchBordCard extends React.Component {\n  render() {\n    const {\n      Icon,\n      Buttons,\n      OnPressSwitch,\n      IsSwitch,\n      onPressDropDown,\n      isDropdownShow,\n      disabledDropDown,\n      onPressAllOnLight,\n      onPressAllOffLight\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Lights Indoor\"), /*#__PURE__*/React.createElement(Dropdown, {\n      as: \"ul\",\n      className: \"header-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      as: \"li\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      as: \"ul\",\n      className: \"dropdown-menu dropdown-menu-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: onPressAllOnLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"All On\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: onPressAllOffLight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, \"All Off\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled basic-list ng-star-inserted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, Buttons.map((Button, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: !Button.NotConnected ? IsSwitch[index] ? \"ng-star-inserted text-warning\" : \"ng-star-inserted\" : \"text-danger ng-star-inserted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, Button.title, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => OnPressSwitch(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: IsSwitch[index] === true && !Button.NotConnected ? \"badge\" : \"badge d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"Off\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: IsSwitch[index] === false && !Button.NotConnected ? \"badge\" : \"badge d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"On\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: Button.NotConnected ? \"ng-star-inserted \" : \"ng-star-inserted d-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }, \"Not Connected\"));\n    }))))));\n  }\n}\nSwitchBordCard.propTypes = {};\nconst mapStateToProps = _ref => {\n  let {\n    ioTReducer\n  } = _ref;\n  return {\n    isSecuritySystem: ioTReducer.isSecuritySystem\n  };\n};\nexport default connect(mapStateToProps, {\n  onPressSwitchBordButton\n})(SwitchBordCard);","map":{"version":3,"names":["React","ReactEcharts","connect","PropTypes","onPressSwitchBordButton","onPressSwitchBordDropDown","Dropdown","SwitchBordCard","Component","render","Icon","Buttons","OnPressSwitch","IsSwitch","onPressDropDown","isDropdownShow","disabledDropDown","onPressAllOnLight","onPressAllOffLight","props","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","as","Toggle","variant","id","Menu","onClick","map","Button","index","key","NotConnected","title","propTypes","mapStateToProps","_ref","ioTReducer","isSecuritySystem"],"sources":["/home/agilepc115/Desktop/Projects/ConnectPlus/lucid-responsive-reactjs-admin-template-2022-03-25-09-01-24-utc/PremiumAdminPanel/src/components/SwitchBordCard.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { onPressSwitchBordButton, onPressSwitchBordDropDown } from \"../actions\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nclass SwitchBordCard extends React.Component {\r\n  render() {\r\n    const {\r\n      Icon,\r\n      Buttons,\r\n      OnPressSwitch,\r\n      IsSwitch,\r\n      onPressDropDown,\r\n      isDropdownShow,\r\n      disabledDropDown,\r\n      onPressAllOnLight,\r\n      onPressAllOffLight,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"col-lg-4 col-md-4 col-sm-12\">\r\n        <div className=\"card\">\r\n          <div className=\"header\">\r\n            <h2>Lights Indoor</h2>\r\n            <Dropdown as=\"ul\" className=\"header-dropdown\">\r\n              <Dropdown.Toggle variant=\"success\" as=\"li\" id=\"dropdown-basic\">\r\n                <Dropdown.Menu\r\n                  as=\"ul\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <li>\r\n                    <a onClick={onPressAllOnLight}>All On</a>\r\n                  </li>\r\n                  <li>\r\n                    <a onClick={onPressAllOffLight}>All Off</a>\r\n                  </li>\r\n                </Dropdown.Menu>\r\n              </Dropdown.Toggle>\r\n            </Dropdown>\r\n            <div className=\"body\">\r\n              <ul className=\"list-unstyled basic-list ng-star-inserted\">\r\n                {Buttons.map((Button, index) => {\r\n                  return (\r\n                    <li\r\n                      key={index}\r\n                      className={\r\n                        !Button.NotConnected\r\n                          ? IsSwitch[index]\r\n                            ? \"ng-star-inserted text-warning\"\r\n                            : \"ng-star-inserted\"\r\n                          : \"text-danger ng-star-inserted\"\r\n                      }\r\n                    >\r\n                      {Button.title}\r\n                      <a onClick={() => OnPressSwitch(index)}>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === true && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          Off\r\n                        </span>\r\n                        <span\r\n                          className={\r\n                            IsSwitch[index] === false && !Button.NotConnected\r\n                              ? \"badge\"\r\n                              : \"badge d-none\"\r\n                          }\r\n                        >\r\n                          On\r\n                        </span>\r\n                      </a>\r\n                      <span\r\n                        className={\r\n                          Button.NotConnected\r\n                            ? \"ng-star-inserted \"\r\n                            : \"ng-star-inserted d-none\"\r\n                        }\r\n                      >\r\n                        Not Connected\r\n                      </span>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwitchBordCard.propTypes = {};\r\n\r\nconst mapStateToProps = ({ ioTReducer }) => ({\r\n  isSecuritySystem: ioTReducer.isSecuritySystem,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onPressSwitchBordButton,\r\n})(SwitchBordCard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}